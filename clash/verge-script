// Clash 全局扩展脚本

// 国内DNS服务器
const domesticNameservers = [
  "https://223.5.5.5/dns-query", // 阿里云公共DNS
  "https://doh.pub/dns-query", // 腾讯DNSPod
];
// 国外DNS服务器
const foreignNameservers = [
  "https://1.1.1.1/dns-query", // Cloudflare(主)
  "https://doh.opendns.com/dns-query", // OpenDNS(主)
];
// DNS配置 
const dnsConfig = {
  "enable": true,
  "listen": "0.0.0.0:1053",
  "ipv6": true,
  "use-system-hosts": false,
  "cache-algorithm": "arc",
  "enhanced-mode": "fake-ip",
  "fake-ip-range": "198.18.0.1/16",
  "fake-ip-filter": [
    // 本地主机/设备
    "+.lan",
    "+.local",
    // Windows网络出现小地球图标
    "+.msftconnecttest.com",
    "+.msftncsi.com",
    // QQ快速登录检测失败
    "localhost.ptlogin2.qq.com",
    "localhost.sec.qq.com",
    // 微信快速登录检测失败
    "localhost.work.weixin.qq.com"
  ],
  "default-nameserver": ["223.5.5.5", "119.29.29.29", "1.1.1.1", "208.67.222.222"],
  "nameserver": [...domesticNameservers, ...foreignNameservers],
  "proxy-server-nameserver": [...domesticNameservers, ...foreignNameservers],
  "nameserver-policy": {
    "geosite:cn,geolocation-cn": domesticNameservers,
    "geosite:google,youtube,telegram,gfw,geolocation-!cn": foreignNameservers
  }
};
// 规则集通用配置
const ruleProviderCommon = {
  "type": "http",
  "format": "yaml",
  "interval": 86400
};
// 规则集配置
const ruleProviders = {
  "applications": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt",
    "path": "./ruleset/applications.yaml"
  },
  "chatgpt": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.list",
    "path": "./ruleset/chatgpt.yaml"
  },
  "netflix": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.list",
    "path": "./ruleset/netflix.yaml"
  },
  "disneyplus": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.list",
    "path": "./ruleset/disneyplus.yaml"
  },
  "tiktok": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.list",
    "path": "./ruleset/tiktok.yaml"
  },
  "gfw": {
    ...ruleProviderCommon,
    "behavior": "domain",
    "url": "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt",
    "path": "./ruleset/gfw.yaml"
  },
	"crack": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/shooven/cdn/main/clash/crack.txt",
    "path": "./ruleset/gfw.yaml"
  },
};
// 规则
const rules = [
  // 自定义规则
  "RULE-SET,chatgpt,节点选择",
  "RULE-SET,netflix,节点选择",
  "RULE-SET,disneyplus,节点选择",
  "RULE-SET,tiktok,节点选择",
  "RULE-SET,gfw,节点选择",
	"RULE-SET,crack,全局直连",
  // 其他规则
  "GEOIP,LAN,全局直连",
  "GEOIP,CN,全局直连",
  "MATCH,漏网之鱼"
];
// 代理组通用配置
const groupBaseOption = {
  "interval": 300,
  "timeout": 3000,
  "url": "https://www.google.com/generate_204",
  "lazy": true,
  "max-failed-times": 3,
  "hidden": false
};

// 程序入口
function main(config) {
  const proxyCount = config?.proxies?.length ?? 0;
  const proxyProviderCount =
    typeof config?.["proxy-providers"] === "object" ? Object.keys(config["proxy-providers"]).length : 0;
  if (proxyCount === 0 && proxyProviderCount === 0) {
    throw new Error("配置文件中未找到任何代理");
  }

  // 覆盖原配置中DNS配置
  config["dns"] = dnsConfig;

  // 覆盖原配置中的代理组
  config["proxy-groups"] = [
    {
      ...groupBaseOption,
      "name": "节点选择",
      "type": "select",
      "proxies": ["延迟选优", "故障转移"],
      "include-all": false,
      "icon": "https://raw.githubusercontent.com/shooven/cdn/main/clash/icon/adjust.svg"
    },
    {
      ...groupBaseOption,
      "name": "延迟选优",
      "type": "url-test",
			"url": "https://www.gstatic.com/generate_204",
			"tolerance": 100,
      "include-all": true,
      "icon": "https://raw.githubusercontent.com/shooven/cdn/main/clash/icon/speed.svg"
    },
    {
    ...groupBaseOption,
      "name": "故障转移",
      "type": "fallback",
			"url": "https://www.gstatic.com/generate_204",
      "include-all": true,
      "icon": "https://raw.githubusercontent.com/shooven/cdn/main/clash/icon/ambulance.svg"
    },
    {
      ...groupBaseOption,
      "name": "ChatGPT",
      "type": "select",
      "proxies": ["节点选择", "延迟选优", "故障转移", "全局直连"],
      "include-all": true,
      "icon": "https://raw.githubusercontent.com/shooven/cdn/main/clash/icon/chatgpt.svg"
    },
	{
      ...groupBaseOption,
      "name": "Netflix",
      "type": "select",
      "proxies": ["节点选择", "延迟选优", "故障转移", "全局直连"],
      "include-all": true,
      "icon": "https://raw.githubusercontent.com/shooven/cdn/main/clash/icon/netflix.svg"
    },
	{
      ...groupBaseOption,
      "name": "Disney+",
      "type": "select",
      "proxies": ["节点选择", "延迟选优", "故障转移", "全局直连"],
      "include-all": true,
      "icon": "https://raw.githubusercontent.com/shooven/cdn/main/clash/icon/disneyplus.svg"
    },
	{
      ...groupBaseOption,
      "name": "TikTok",
      "type": "select",
      "proxies": ["节点选择", "延迟选优", "故障转移", "全局直连"],
      "include-all": true,
      "icon": "https://raw.githubusercontent.com/shooven/cdn/main/clash/icon/tiktok.svg"
    },
    {
      ...groupBaseOption,
      "name": "全局直连",
      "type": "select",
      "proxies": ["DIRECT", "节点选择", "延迟选优", "故障转移"],
      "include-all": true,
      "icon": "https://raw.githubusercontent.com/shooven/cdn/main/clash/icon/link.svg"
    },
	{
      ...groupBaseOption,
      "name": "漏网之鱼",
      "type": "select",
      "proxies": ["节点选择", "延迟选优", "故障转移", "全局直连"],
      "include-all": true,
      "icon": "https://raw.githubusercontent.com/shooven/cdn/main/clash/icon/fish.svg"
    }
  ];

  // 覆盖原配置中的规则
  config["rule-providers"] = ruleProviders;
  config["rules"] = rules;

  // 返回修改后的配置
  return config;
}
